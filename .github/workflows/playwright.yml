name: Playwright Tests
on:
  workflow_dispatch:
    inputs:
      branch:
        type: string
      app_id:
        type: string
    
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Output Branch
        run:  echo 'Branch is ${{ inputs.branch }}, ${{inputs.app_id}}'
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      # - name: Install dependencies
      #   run: npm ci
      # - name: Install Playwright Browsers
      #   run: npx playwright install --with-deps chromium
      # - name: Run Playwright tests
      #   id: tests
      #   run:  INPUT_BRANCH=${{ inputs.branch }} INPUT_APP_ID=${{inputs.app_id}} npm run test:prod
      # - name: Upload playwright-report
      #   uses: actions/upload-artifact@v4
      #   id: artifact-upload
      #   if: always()
      #   with:
      #     name: playwright-report
      #     path: playwright-report/
      #     retention-days: 30
      # - name: Output artifact URL
      #   run:  echo 'Artifact ULR is ${{ steps.artifact-upload.outputs.artifact-url }}'
      - name: Output statuses
        run:  echo 'Result statuses ${{ steps.artifact-upload.outputs.artifact-url }}, ${{join(steps.tests.outputs.*, '\n')}}, ${{steps.tests.conclusion}}, ${{steps.tests.outcome}}'
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: frontend_tests
          SLACK_COLOR: ${{ job.status }} 
          SLACK_ICON: https://cdn.prod.website-files.com/60e597955866d334d69541ba/612784b9d4709081f0932c34_icon%20256x256.png
          SLACK_MESSAGE_ON_SUCCESS: ':meow_party: Tests for ${{ inputs.branch }} \n Result: ${{steps.tests.outcome}} \n Report: ${{ steps.artifact-upload.outputs.artifact-url }}'
          SLACK_MESSAGE_ON_FAILURE: ':meow_code: Tests for ${{ inputs.branch }} \n Result: ${{steps.tests.outcome}} \n Report: ${{ steps.artifact-upload.outputs.artifact-url }}'
          SLACK_MESSAGE: 'Tests for ${{ inputs.branch }} \n Result: ${{steps.tests.outcome}} \n Report: ${{ steps.artifact-upload.outputs.artifact-url }}'
          SLACK_TITLE: Tests Finished with ${{ job.status }}
          SLACK_USERNAME: FrontendTests
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          ENABLE_ESCAPES: 'true'
      - name: Slack Notification 2
        run: |
          curl -X POST ${{ secrets.SLACK_WEBHOOK_URL }} \
          -H 'Content-type:application/json' \
          --data '{\\\"blocks\\\":[{\\\"type\\\":\\\"section\\\",\\\"text\\\":{\\\"type\\\":\\\"mrkdwn\\\",\\\"text\\\":\\\"*Github Repo:*\n*Branch:* \n*Status*:Build successful.\\\"}}]}' 