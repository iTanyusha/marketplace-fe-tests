name: Playwright Tests
on:
  workflow_dispatch:
    inputs:
      branch:
        type: string
      app_id:
        type: string
    
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Output Branch
        run:  echo 'Branch is ${{ inputs.branch || 'main' }},${{inputs.app_id}}'
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium
      - name: Run Playwright tests
        id: tests
        run:  INPUT_BRANCH=${{ inputs.branch }} INPUT_APP_ID=${{ inputs.app_id }} npm run test:prod
      - name: Upload playwright-report
        uses: actions/upload-artifact@v4
        id: artifact-upload
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - name: Output statuses
        if: always()
        run:  echo 'Result statuses ${{join(steps.tests.outputs.*,'\n')}},${{steps.tests.conclusion}},${{steps.tests.outcome}}'
      - name: Slack Notification
        if: always()
        run: |
          curl -X POST ${{secrets.SLACK_WEBHOOK_URL}} -H 'Content-type:application/json' --data '{"attachments":[{"color":"${{job.status == 'success' && '#008000' || '#D40E0D'}}","blocks":[{"type":"header","text":{"type":"plain_text","text":"${{job.status == 'success' && ':innocent:' || ':scream_cat:'}} Tests for ${{inputs.branch !='' && inputs.branch || 'main'}}","emoji":true}},{"type":"divider"},{"type":"section","text":{"type":"mrkdwn","text":"Result: *${{steps.tests.outcome}}* \n <https://github.com/${{github.repository}}/actions/runs/${{ github.run_id }}|See run logs> \n <${{steps.artifact-upload.outputs.artifact-url}}|Download report>"}}]}]}' 